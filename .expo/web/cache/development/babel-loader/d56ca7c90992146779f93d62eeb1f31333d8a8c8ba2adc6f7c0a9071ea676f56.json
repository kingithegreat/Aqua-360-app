{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"transform\"];\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _createForOfIteratorHelper(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (!t) {\n    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n      t && (r = t);\n      var _n = 0,\n        F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          return _n >= r.length ? {\n            done: !0\n          } : {\n            done: !1,\n            value: r[_n++]\n          };\n        },\n        e: function e(r) {\n          throw r;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var o,\n    a = !0,\n    u = !1;\n  return {\n    s: function s() {\n      t = t.call(r);\n    },\n    n: function n() {\n      var r = t.next();\n      return a = r.done, r;\n    },\n    e: function e(r) {\n      u = !0, o = r;\n    },\n    f: function f() {\n      try {\n        a || null == t[\"return\"] || t[\"return\"]();\n      } finally {\n        if (u) throw o;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nimport { AnimationsData, TransitionType } from \"./config.js\";\nimport { convertAnimationObjectToKeyframes } from \"./animationParser.js\";\nimport { LinearTransition } from \"./transition/Linear.web.js\";\nimport { SequencedTransition } from \"./transition/Sequenced.web.js\";\nimport { FadingTransition } from \"./transition/Fading.web.js\";\nimport { JumpingTransition } from \"./transition/Jumping.web.js\";\nimport { insertWebAnimation } from \"./domUtils.js\";\nimport { CurvedTransition } from \"./transition/Curved.web.js\";\nimport { EntryExitTransition } from \"./transition/EntryExit.web.js\";\nfunction addPxToTransform(transform) {\n  var newTransform = transform.map(function (transformProp) {\n    var newTransformProp = {};\n    for (var _i = 0, _Object$entries = Object.entries(transformProp); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      if ((key.includes('translate') || key.includes('perspective')) && typeof value === 'number') {\n        newTransformProp[key] = \"\".concat(value, \"px\");\n      } else {\n        newTransformProp[key] = value;\n      }\n    }\n    return newTransformProp;\n  });\n  return newTransform;\n}\nexport function createCustomKeyFrameAnimation(keyframeDefinitions) {\n  for (var _i2 = 0, _Object$values = Object.values(keyframeDefinitions); _i2 < _Object$values.length; _i2++) {\n    var value = _Object$values[_i2];\n    if (value.transform) {\n      value.transform = addPxToTransform(value.transform);\n    }\n  }\n  var animationData = {\n    name: '',\n    style: keyframeDefinitions,\n    duration: -1\n  };\n  animationData.name = generateNextCustomKeyframeName();\n  var parsedKeyframe = convertAnimationObjectToKeyframes(animationData);\n  insertWebAnimation(animationData.name, parsedKeyframe);\n  return animationData.name;\n}\nexport function createAnimationWithInitialValues(animationName, initialValues) {\n  var animationStyle = structuredClone(AnimationsData[animationName].style);\n  var firstAnimationStep = animationStyle['0'];\n  var transform = initialValues.transform,\n    rest = _objectWithoutProperties(initialValues, _excluded);\n  var transformWithPx = addPxToTransform(transform);\n  if (transform) {\n    if (!firstAnimationStep.transform) {\n      firstAnimationStep.transform = transformWithPx;\n    } else {\n      var transformStyle = new Map();\n      var _iterator = _createForOfIteratorHelper(firstAnimationStep.transform),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var rule = _step.value;\n          for (var _i3 = 0, _Object$entries2 = Object.entries(rule); _i3 < _Object$entries2.length; _i3++) {\n            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i3], 2),\n              property = _Object$entries2$_i[0],\n              value = _Object$entries2$_i[1];\n            transformStyle.set(property, value);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var _iterator2 = _createForOfIteratorHelper(transformWithPx),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _rule = _step2.value;\n          for (var _i4 = 0, _Object$entries3 = Object.entries(_rule); _i4 < _Object$entries3.length; _i4++) {\n            var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i4], 2),\n              _property = _Object$entries3$_i[0],\n              _value = _Object$entries3$_i[1];\n            transformStyle.set(_property, _value);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      firstAnimationStep.transform = Array.from(transformStyle, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          property = _ref2[0],\n          value = _ref2[1];\n        return _defineProperty({}, property, value);\n      });\n    }\n  }\n  animationStyle['0'] = _objectSpread(_objectSpread({}, animationStyle['0']), rest);\n  var keyframeName = generateNextCustomKeyframeName();\n  var animationObject = {\n    name: keyframeName,\n    style: animationStyle,\n    duration: AnimationsData[animationName].duration\n  };\n  var keyframe = convertAnimationObjectToKeyframes(animationObject);\n  insertWebAnimation(keyframeName, keyframe);\n  return keyframeName;\n}\nvar customKeyframeCounter = 0;\nfunction generateNextCustomKeyframeName() {\n  return \"REA\".concat(customKeyframeCounter++);\n}\nexport function TransitionGenerator(transitionType, transitionData) {\n  var transitionKeyframeName = generateNextCustomKeyframeName();\n  var dummyTransitionKeyframeName;\n  var transitionObject;\n  switch (transitionType) {\n    case TransitionType.LINEAR:\n      transitionObject = LinearTransition(transitionKeyframeName, transitionData);\n      break;\n    case TransitionType.SEQUENCED:\n      transitionObject = SequencedTransition(transitionKeyframeName, transitionData);\n      break;\n    case TransitionType.FADING:\n      transitionObject = FadingTransition(transitionKeyframeName, transitionData);\n      break;\n    case TransitionType.JUMPING:\n      transitionObject = JumpingTransition(transitionKeyframeName, transitionData);\n      break;\n    case TransitionType.CURVED:\n      {\n        dummyTransitionKeyframeName = generateNextCustomKeyframeName();\n        var _CurvedTransition = CurvedTransition(transitionKeyframeName, dummyTransitionKeyframeName, transitionData),\n          firstKeyframeObj = _CurvedTransition.firstKeyframeObj,\n          secondKeyframeObj = _CurvedTransition.secondKeyframeObj;\n        transitionObject = firstKeyframeObj;\n        var dummyKeyframe = convertAnimationObjectToKeyframes(secondKeyframeObj);\n        insertWebAnimation(dummyTransitionKeyframeName, dummyKeyframe);\n        break;\n      }\n    case TransitionType.ENTRY_EXIT:\n      transitionObject = EntryExitTransition(transitionKeyframeName, transitionData);\n      break;\n  }\n  var transitionKeyframe = convertAnimationObjectToKeyframes(transitionObject);\n  insertWebAnimation(transitionKeyframeName, transitionKeyframe);\n  return {\n    transitionKeyframeName: transitionKeyframeName,\n    dummyTransitionKeyframeName: dummyTransitionKeyframeName\n  };\n}","map":{"version":3,"names":["_defineProperty","_objectWithoutProperties","_slicedToArray","_excluded","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_createForOfIteratorHelper","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","_n","F","s","n","done","value","f","TypeError","a","u","call","next","_arrayLikeToArray","toString","slice","constructor","name","from","test","AnimationsData","TransitionType","convertAnimationObjectToKeyframes","LinearTransition","SequencedTransition","FadingTransition","JumpingTransition","insertWebAnimation","CurvedTransition","EntryExitTransition","addPxToTransform","transform","newTransform","map","transformProp","newTransformProp","_i","_Object$entries","entries","_Object$entries$_i","key","includes","concat","createCustomKeyFrameAnimation","keyframeDefinitions","_i2","_Object$values","values","animationData","style","duration","generateNextCustomKeyframeName","parsedKeyframe","createAnimationWithInitialValues","animationName","initialValues","animationStyle","structuredClone","firstAnimationStep","rest","transformWithPx","transformStyle","Map","_iterator","_step","rule","_i3","_Object$entries2","_Object$entries2$_i","property","set","err","_iterator2","_step2","_rule","_i4","_Object$entries3","_Object$entries3$_i","_property","_value","_ref","_ref2","keyframeName","animationObject","keyframe","customKeyframeCounter","TransitionGenerator","transitionType","transitionData","transitionKeyframeName","dummyTransitionKeyframeName","transitionObject","LINEAR","SEQUENCED","FADING","JUMPING","CURVED","_CurvedTransition","firstKeyframeObj","secondKeyframeObj","dummyKeyframe","ENTRY_EXIT","transitionKeyframe"],"sources":["C:\\Users\\adenk\\OneDrive - Toi Ohomai Institute of Technology\\Desktop\\test\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\web\\createAnimation.ts"],"sourcesContent":["'use strict';\n\nimport { AnimationsData, TransitionType } from './config';\nimport type { InitialValuesStyleProps, KeyframeDefinitions } from './config';\nimport { convertAnimationObjectToKeyframes } from './animationParser';\nimport type {\n  AnimationData,\n  ReanimatedWebTransformProperties,\n  TransitionData,\n} from './animationParser';\nimport type { TransformsStyle } from 'react-native';\nimport { LinearTransition } from './transition/Linear.web';\nimport { SequencedTransition } from './transition/Sequenced.web';\nimport { FadingTransition } from './transition/Fading.web';\nimport { JumpingTransition } from './transition/Jumping.web';\nimport { insertWebAnimation } from './domUtils';\nimport { CurvedTransition } from './transition/Curved.web';\nimport { EntryExitTransition } from './transition/EntryExit.web';\n\ntype TransformType = NonNullable<TransformsStyle['transform']>;\n\n// Translate values are passed as numbers. However, if `translate` property receives number, it will not automatically\n// convert it to `px`. Therefore if we want to keep transform we have to add 'px' suffix to each of translate values\n// that are present inside transform.\n//\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction addPxToTransform(transform: TransformType) {\n  type RNTransformProp = (typeof transform)[number];\n\n  // @ts-ignore `existingTransform` cannot be string because in that case\n  // we throw error in `extractTransformFromStyle`\n  const newTransform = transform.map((transformProp: RNTransformProp) => {\n    const newTransformProp: ReanimatedWebTransformProperties = {};\n    for (const [key, value] of Object.entries(transformProp)) {\n      if (\n        (key.includes('translate') || key.includes('perspective')) &&\n        typeof value === 'number'\n      ) {\n        // @ts-ignore After many trials we decided to ignore this error - it says that we cannot use 'key' to index this object.\n        // Sadly it doesn't go away after using cast `key as keyof TransformProperties`.\n        newTransformProp[key] = `${value}px`;\n      } else {\n        // @ts-ignore same as above.\n        newTransformProp[key] = value;\n      }\n    }\n    return newTransformProp;\n  });\n\n  return newTransform;\n}\n\nexport function createCustomKeyFrameAnimation(\n  keyframeDefinitions: KeyframeDefinitions\n) {\n  for (const value of Object.values(keyframeDefinitions)) {\n    if (value.transform) {\n      value.transform = addPxToTransform(value.transform as TransformType);\n    }\n  }\n\n  const animationData: AnimationData = {\n    name: '',\n    style: keyframeDefinitions,\n    duration: -1,\n  };\n\n  animationData.name = generateNextCustomKeyframeName();\n\n  const parsedKeyframe = convertAnimationObjectToKeyframes(animationData);\n\n  insertWebAnimation(animationData.name, parsedKeyframe);\n\n  return animationData.name;\n}\n\nexport function createAnimationWithInitialValues(\n  animationName: string,\n  initialValues: InitialValuesStyleProps\n) {\n  const animationStyle = structuredClone(AnimationsData[animationName].style);\n  const firstAnimationStep = animationStyle['0'];\n\n  const { transform, ...rest } = initialValues;\n  const transformWithPx = addPxToTransform(transform as TransformType);\n\n  if (transform) {\n    // If there was no predefined transform, we can simply assign transform from `initialValues`.\n    if (!firstAnimationStep.transform) {\n      firstAnimationStep.transform = transformWithPx;\n    } else {\n      // Othwerwise we have to merge predefined transform with the one provided in `initialValues`.\n      // To do that, we create `Map` that will contain final transform.\n      const transformStyle = new Map<string, any>();\n\n      // First we assign all of the predefined rules\n      for (const rule of firstAnimationStep.transform) {\n        // In most cases there will be just one iteration\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Then we either add new rule, or override one that already exists.\n      for (const rule of transformWithPx) {\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Finally, we convert `Map` with final transform back into array of objects.\n      firstAnimationStep.transform = Array.from(\n        transformStyle,\n        ([property, value]) => ({\n          [property]: value,\n        })\n      );\n    }\n  }\n\n  animationStyle['0'] = {\n    ...animationStyle['0'],\n    ...rest,\n  };\n\n  // TODO: Maybe we can extract the logic below into separate function\n  const keyframeName = generateNextCustomKeyframeName();\n\n  const animationObject: AnimationData = {\n    name: keyframeName,\n    style: animationStyle,\n    duration: AnimationsData[animationName].duration,\n  };\n\n  const keyframe = convertAnimationObjectToKeyframes(animationObject);\n\n  insertWebAnimation(keyframeName, keyframe);\n\n  return keyframeName;\n}\n\nlet customKeyframeCounter = 0;\n\nfunction generateNextCustomKeyframeName() {\n  return `REA${customKeyframeCounter++}`;\n}\n\n/**\n * Creates transition of given type, appends it to stylesheet and returns\n * keyframe name.\n *\n * @param transitionType - Type of transition (e.g. LINEAR).\n * @param transitionData - Object containing data for transforms (translateX,\n *   scaleX,...).\n * @returns Keyframe name that represents transition.\n */\nexport function TransitionGenerator(\n  transitionType: TransitionType,\n  transitionData: TransitionData\n) {\n  const transitionKeyframeName = generateNextCustomKeyframeName();\n  let dummyTransitionKeyframeName;\n\n  let transitionObject;\n\n  switch (transitionType) {\n    case TransitionType.LINEAR:\n      transitionObject = LinearTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.SEQUENCED:\n      transitionObject = SequencedTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.FADING:\n      transitionObject = FadingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.JUMPING:\n      transitionObject = JumpingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n\n    // Here code block with {} is necessary because of eslint\n    case TransitionType.CURVED: {\n      dummyTransitionKeyframeName = generateNextCustomKeyframeName();\n\n      const { firstKeyframeObj, secondKeyframeObj } = CurvedTransition(\n        transitionKeyframeName,\n        dummyTransitionKeyframeName,\n        transitionData\n      );\n\n      transitionObject = firstKeyframeObj;\n\n      const dummyKeyframe =\n        convertAnimationObjectToKeyframes(secondKeyframeObj);\n\n      insertWebAnimation(dummyTransitionKeyframeName, dummyKeyframe);\n\n      break;\n    }\n    case TransitionType.ENTRY_EXIT:\n      transitionObject = EntryExitTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n  }\n\n  const transitionKeyframe =\n    convertAnimationObjectToKeyframes(transitionObject);\n\n  insertWebAnimation(transitionKeyframeName, transitionKeyframe);\n\n  return { transitionKeyframeName, dummyTransitionKeyframeName };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}