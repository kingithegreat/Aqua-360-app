{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { colors } from \"../styles/globalStyles\";\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    fullName = _useState2[0],\n    setFullName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    phone = _useState6[0],\n    setPhone = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    confirmPassword = _useState10[0],\n    setConfirmPassword = _useState10[1];\n  var handleSignUp = function handleSignUp() {\n    if (!fullName || !email || !phone || !password || !confirmPassword) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n    if (password !== confirmPassword) {\n      Alert.alert('Error', 'Passwords do not match');\n      return;\n    }\n    Alert.alert('Success', 'Account created successfully!', [{\n      text: 'OK',\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      }\n    }]);\n  };\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.header\n  }, \"Create Account\"), React.createElement(View, {\n    style: styles.formGroup\n  }, React.createElement(Text, {\n    style: styles.label\n  }, \"Full Name\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter your full name\",\n    value: fullName,\n    onChangeText: setFullName\n  })), React.createElement(View, {\n    style: styles.formGroup\n  }, React.createElement(Text, {\n    style: styles.label\n  }, \"Email\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter your email\",\n    value: email,\n    onChangeText: setEmail,\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\"\n  })), React.createElement(View, {\n    style: styles.formGroup\n  }, React.createElement(Text, {\n    style: styles.label\n  }, \"Phone Number\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter your phone number\",\n    value: phone,\n    onChangeText: setPhone,\n    keyboardType: \"phone-pad\"\n  })), React.createElement(View, {\n    style: styles.formGroup\n  }, React.createElement(Text, {\n    style: styles.label\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Create a password\",\n    value: password,\n    onChangeText: setPassword,\n    secureTextEntry: true\n  })), React.createElement(View, {\n    style: styles.formGroup\n  }, React.createElement(Text, {\n    style: styles.label\n  }, \"Confirm Password\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Confirm your password\",\n    value: confirmPassword,\n    onChangeText: setConfirmPassword,\n    secureTextEntry: true\n  })), React.createElement(TouchableOpacity, {\n    style: styles.signUpButton,\n    onPress: handleSignUp\n  }, React.createElement(Text, {\n    style: styles.signUpButtonText\n  }, \"Sign Up\")), React.createElement(View, {\n    style: styles.loginContainer\n  }, React.createElement(Text, {\n    style: styles.loginText\n  }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    }\n  }, React.createElement(Text, {\n    style: styles.loginLink\n  }, \"Log In\"))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: colors.secondary\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: colors.primary,\n    marginBottom: 32,\n    marginTop: 24\n  },\n  formGroup: {\n    marginBottom: 20\n  },\n  label: {\n    fontSize: 17,\n    color: colors.primary,\n    marginBottom: 8,\n    fontWeight: '500'\n  },\n  input: {\n    backgroundColor: colors.white,\n    borderRadius: 8,\n    padding: 14,\n    fontSize: 17\n  },\n  signUpButton: {\n    backgroundColor: colors.primary,\n    borderRadius: 8,\n    padding: 15,\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  signUpButtonText: {\n    color: colors.white,\n    fontSize: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.5\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 10,\n    marginBottom: 30\n  },\n  loginText: {\n    color: colors.darkGrey,\n    fontSize: 17\n  },\n  loginLink: {\n    color: colors.primary,\n    fontSize: 17,\n    fontWeight: 'bold'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ScrollView","colors","SignUpScreen","_ref","navigation","_useState","_useState2","_slicedToArray","fullName","setFullName","_useState3","_useState4","email","setEmail","_useState5","_useState6","phone","setPhone","_useState7","_useState8","password","setPassword","_useState9","_useState10","confirmPassword","setConfirmPassword","handleSignUp","alert","text","onPress","navigate","createElement","style","styles","container","header","formGroup","label","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","secureTextEntry","signUpButton","signUpButtonText","loginContainer","loginText","loginLink","create","flex","padding","backgroundColor","secondary","fontSize","fontWeight","color","primary","marginBottom","marginTop","white","borderRadius","alignItems","letterSpacing","flexDirection","justifyContent","darkGrey"],"sources":["C:/Users/adenk/OneDrive - Toi Ohomai Institute of Technology/Desktop/test/src/screens/SignUpScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert, ScrollView } from 'react-native';\r\nimport { colors } from '../styles/globalStyles';\r\n\r\nconst SignUpScreen = ({ navigation }) => {\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const handleSignUp = () => {\r\n    // Basic validation\r\n    if (!fullName || !email || !phone || !password || !confirmPassword) {\r\n      Alert.alert('Error', 'Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      Alert.alert('Error', 'Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    // Simulate successful registration\r\n    Alert.alert('Success', 'Account created successfully!', [\r\n      { text: 'OK', onPress: () => navigation.navigate('Home') }\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.header}>Create Account</Text>\r\n      \r\n      <View style={styles.formGroup}>\r\n        <Text style={styles.label}>Full Name</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter your full name\"\r\n          value={fullName}\r\n          onChangeText={setFullName}\r\n        />\r\n      </View>\r\n      \r\n      <View style={styles.formGroup}>\r\n        <Text style={styles.label}>Email</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter your email\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n        />\r\n      </View>\r\n      \r\n      <View style={styles.formGroup}>\r\n        <Text style={styles.label}>Phone Number</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter your phone number\"\r\n          value={phone}\r\n          onChangeText={setPhone}\r\n          keyboardType=\"phone-pad\"\r\n        />\r\n      </View>\r\n      \r\n      <View style={styles.formGroup}>\r\n        <Text style={styles.label}>Password</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Create a password\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry\r\n        />\r\n      </View>\r\n      \r\n      <View style={styles.formGroup}>\r\n        <Text style={styles.label}>Confirm Password</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Confirm your password\"\r\n          value={confirmPassword}\r\n          onChangeText={setConfirmPassword}\r\n          secureTextEntry\r\n        />\r\n      </View>\r\n      \r\n      <TouchableOpacity style={styles.signUpButton} onPress={handleSignUp}>\r\n        <Text style={styles.signUpButtonText}>Sign Up</Text>\r\n      </TouchableOpacity>\r\n      \r\n      <View style={styles.loginContainer}>\r\n        <Text style={styles.loginText}>Already have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.navigate('Login')}>\r\n          <Text style={styles.loginLink}>Log In</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: colors.secondary,\r\n  },\r\n  header: {\r\n    fontSize: 30, // Increased from 28\r\n    fontWeight: 'bold',\r\n    color: colors.primary,\r\n    marginBottom: 32, // Increased from 30\r\n    marginTop: 24, // Increased from 20\r\n  },\r\n  formGroup: {\r\n    marginBottom: 20,\r\n  },\r\n  label: {\r\n    fontSize: 17, // Increased from 16\r\n    color: colors.primary,\r\n    marginBottom: 8,\r\n    fontWeight: '500',\r\n  },\r\n  input: {\r\n    backgroundColor: colors.white,\r\n    borderRadius: 8,\r\n    padding: 14, // Increased from 12\r\n    fontSize: 17, // Increased from 16\r\n  },\r\n  signUpButton: {\r\n    backgroundColor: colors.primary,\r\n    borderRadius: 8,\r\n    padding: 15,\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  signUpButtonText: {\r\n    color: colors.white,\r\n    fontSize: 18, // Increased from 16\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.5,\r\n  },\r\n  loginContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 30,\r\n  },\r\n  loginText: {\r\n    color: colors.darkGrey,\r\n    fontSize: 17, // Increased from 16\r\n  },\r\n  loginLink: {\r\n    color: colors.primary,\r\n    fontSize: 17, // Increased from 16\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default SignUpScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}