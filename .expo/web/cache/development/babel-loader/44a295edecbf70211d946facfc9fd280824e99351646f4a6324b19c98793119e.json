{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nimport { registerEventHandler, unregisterEventHandler } from \"./core.js\";\nimport { shouldBeUseWeb } from \"./PlatformChecker.js\";\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nfunction jsListener(eventName, handler) {\n  return function (evt) {\n    handler(_objectSpread(_objectSpread({}, evt.nativeEvent), {}, {\n      eventName: eventName\n    }));\n  };\n}\nvar _viewTags = new WeakMap();\nvar _registrations = new WeakMap();\nvar WorkletEventHandlerNative = function () {\n  function WorkletEventHandlerNative(worklet, eventNames) {\n    _classCallCheck(this, WorkletEventHandlerNative);\n    _classPrivateFieldInitSpec(this, _viewTags, void 0);\n    _classPrivateFieldInitSpec(this, _registrations, void 0);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    _classPrivateFieldSet(_viewTags, this, new Set());\n    _classPrivateFieldSet(_registrations, this, new Map());\n  }\n  return _createClass(WorkletEventHandlerNative, [{\n    key: \"updateEventHandler\",\n    value: function updateEventHandler(newWorklet, newEvents) {\n      var _this = this;\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n      _classPrivateFieldGet(_registrations, this).forEach(function (registrationIDs) {\n        registrationIDs.forEach(function (id) {\n          return unregisterEventHandler(id);\n        });\n      });\n      Array.from(_classPrivateFieldGet(_viewTags, this)).forEach(function (tag) {\n        var newRegistrations = _this.eventNames.map(function (eventName) {\n          return registerEventHandler(_this.worklet, eventName, tag);\n        });\n        _classPrivateFieldGet(_registrations, _this).set(tag, newRegistrations);\n      });\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag, fallbackEventName) {\n      var _this2 = this;\n      _classPrivateFieldGet(_viewTags, this).add(viewTag);\n      var newRegistrations = this.eventNames.map(function (eventName) {\n        return registerEventHandler(_this2.worklet, eventName, viewTag);\n      });\n      _classPrivateFieldGet(_registrations, this).set(viewTag, newRegistrations);\n      if (this.eventNames.length === 0 && fallbackEventName) {\n        var newRegistration = registerEventHandler(this.worklet, fallbackEventName, viewTag);\n        _classPrivateFieldGet(_registrations, this).set(viewTag, [newRegistration]);\n      }\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents(viewTag) {\n      var _classPrivateFieldGet2;\n      _classPrivateFieldGet(_viewTags, this)[\"delete\"](viewTag);\n      (_classPrivateFieldGet2 = _classPrivateFieldGet(_registrations, this).get(viewTag)) === null || _classPrivateFieldGet2 === void 0 || _classPrivateFieldGet2.forEach(function (id) {\n        unregisterEventHandler(id);\n      });\n      _classPrivateFieldGet(_registrations, this)[\"delete\"](viewTag);\n    }\n  }]);\n}();\nvar WorkletEventHandlerWeb = function () {\n  function WorkletEventHandlerWeb(worklet) {\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _classCallCheck(this, WorkletEventHandlerWeb);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.listeners = {};\n    this.setupWebListeners();\n  }\n  return _createClass(WorkletEventHandlerWeb, [{\n    key: \"setupWebListeners\",\n    value: function setupWebListeners() {\n      var _this3 = this;\n      this.listeners = {};\n      this.eventNames.forEach(function (eventName) {\n        _this3.listeners[eventName] = jsListener(eventName, _this3.worklet);\n      });\n    }\n  }, {\n    key: \"updateEventHandler\",\n    value: function updateEventHandler(newWorklet, newEvents) {\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n      this.setupWebListeners();\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(_viewTag, _fallbackEventName) {}\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents(_viewTag) {}\n  }]);\n}();\nexport var WorkletEventHandler = SHOULD_BE_USE_WEB ? WorkletEventHandlerWeb : WorkletEventHandlerNative;","map":{"version":3,"names":["_classCallCheck","_createClass","_defineProperty","_classPrivateFieldInitSpec","e","t","a","_checkPrivateRedeclaration","set","has","TypeError","_classPrivateFieldGet","s","get","_assertClassBrand","_classPrivateFieldSet","r","n","arguments","length","ownKeys","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","registerEventHandler","unregisterEventHandler","shouldBeUseWeb","SHOULD_BE_USE_WEB","jsListener","eventName","handler","evt","nativeEvent","_viewTags","WeakMap","_registrations","WorkletEventHandlerNative","worklet","eventNames","Set","Map","key","value","updateEventHandler","newWorklet","newEvents","_this","registrationIDs","id","Array","from","tag","newRegistrations","map","registerForEvents","viewTag","fallbackEventName","_this2","add","newRegistration","unregisterFromEvents","_classPrivateFieldGet2","WorkletEventHandlerWeb","undefined","listeners","setupWebListeners","_this3","_viewTag","_fallbackEventName","WorkletEventHandler"],"sources":["C:\\Users\\adenk\\OneDrive - Toi Ohomai Institute of Technology\\Desktop\\test\\node_modules\\react-native-reanimated\\src\\WorkletEventHandler.ts"],"sourcesContent":["'use strict';\nimport type { NativeSyntheticEvent } from 'react-native';\nimport { registerEventHandler, unregisterEventHandler } from './core';\nimport type {\n  EventPayload,\n  ReanimatedEvent,\n  IWorkletEventHandler,\n} from './hook/commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ntype JSEvent<Event extends object> = NativeSyntheticEvent<EventPayload<Event>>;\n\n// In JS implementation (e.g. for web) we don't use Reanimated's\n// event emitter, therefore we have to handle here\n// the event that came from React Native and convert it.\nfunction jsListener<Event extends object>(\n  eventName: string,\n  handler: (event: ReanimatedEvent<Event>) => void\n) {\n  return (evt: JSEvent<Event>) => {\n    handler({ ...evt.nativeEvent, eventName } as ReanimatedEvent<Event>);\n  };\n}\n\nclass WorkletEventHandlerNative<Event extends object>\n  implements IWorkletEventHandler<Event>\n{\n  eventNames: string[];\n  worklet: (event: ReanimatedEvent<Event>) => void;\n  #viewTags: Set<number>;\n  #registrations: Map<number, number[]>; // keys are viewTags, values are arrays of registration ID's for each viewTag\n  constructor(\n    worklet: (event: ReanimatedEvent<Event>) => void,\n    eventNames: string[]\n  ) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.#viewTags = new Set<number>();\n    this.#registrations = new Map<number, number[]>();\n  }\n\n  updateEventHandler(\n    newWorklet: (event: ReanimatedEvent<Event>) => void,\n    newEvents: string[]\n  ): void {\n    // Update worklet and event names\n    this.worklet = newWorklet;\n    this.eventNames = newEvents;\n\n    // Detach all events\n    this.#registrations.forEach((registrationIDs) => {\n      registrationIDs.forEach((id) => unregisterEventHandler(id));\n      // No need to remove registrationIDs from map, since it gets overwritten when attaching\n    });\n\n    // Attach new events with new worklet\n    Array.from(this.#viewTags).forEach((tag) => {\n      const newRegistrations = this.eventNames.map((eventName) =>\n        registerEventHandler(this.worklet, eventName, tag)\n      );\n      this.#registrations.set(tag, newRegistrations);\n    });\n  }\n\n  registerForEvents(viewTag: number, fallbackEventName?: string): void {\n    this.#viewTags.add(viewTag);\n\n    const newRegistrations = this.eventNames.map((eventName) =>\n      registerEventHandler(this.worklet, eventName, viewTag)\n    );\n    this.#registrations.set(viewTag, newRegistrations);\n\n    if (this.eventNames.length === 0 && fallbackEventName) {\n      const newRegistration = registerEventHandler(\n        this.worklet,\n        fallbackEventName,\n        viewTag\n      );\n      this.#registrations.set(viewTag, [newRegistration]);\n    }\n  }\n\n  unregisterFromEvents(viewTag: number): void {\n    this.#viewTags.delete(viewTag);\n    this.#registrations.get(viewTag)?.forEach((id) => {\n      unregisterEventHandler(id);\n    });\n    this.#registrations.delete(viewTag);\n  }\n}\n\nclass WorkletEventHandlerWeb<Event extends object>\n  implements IWorkletEventHandler<Event>\n{\n  eventNames: string[];\n  listeners:\n    | Record<string, (event: ReanimatedEvent<ReanimatedEvent<Event>>) => void>\n    | Record<string, (event: JSEvent<Event>) => void>;\n\n  worklet: (event: ReanimatedEvent<Event>) => void;\n\n  constructor(\n    worklet: (event: ReanimatedEvent<Event>) => void,\n    eventNames: string[] = []\n  ) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.listeners = {};\n    this.setupWebListeners();\n  }\n\n  setupWebListeners() {\n    this.listeners = {};\n    this.eventNames.forEach((eventName) => {\n      this.listeners[eventName] = jsListener(eventName, this.worklet);\n    });\n  }\n\n  updateEventHandler(\n    newWorklet: (event: ReanimatedEvent<Event>) => void,\n    newEvents: string[]\n  ): void {\n    // Update worklet and event names\n    this.worklet = newWorklet;\n    this.eventNames = newEvents;\n    this.setupWebListeners();\n  }\n\n  registerForEvents(_viewTag: number, _fallbackEventName?: string): void {\n    // noop\n  }\n\n  unregisterFromEvents(_viewTag: number): void {\n    // noop\n  }\n}\n\nexport const WorkletEventHandler = SHOULD_BE_USE_WEB\n  ? WorkletEventHandlerWeb\n  : WorkletEventHandlerNative;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}