{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nvar gestures = {};\nexport function getHandler(tag) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n  throw new Error(\"No handler for tag \".concat(tag));\n}\nexport function createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error(\"Handler with tag \".concat(handlerTag, \" already exists\"));\n  }\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\nexport function dropGestureHandler(handlerTag) {\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\nexport function getNodes() {\n  return _objectSpread({}, gestures);\n}","map":{"version":3,"names":["gestures","getHandler","tag","Error","concat","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes","_objectSpread"],"sources":["C:\\Users\\adenk\\OneDrive - Toi Ohomai Institute of Technology\\Desktop\\test\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\NodeManager.ts"],"sourcesContent":["import { ValueOf } from '../typeUtils';\nimport { HammerGestures } from '../RNGestureHandlerModule.web';\n\nconst gestures: Record<\n  number,\n  InstanceType<ValueOf<typeof HammerGestures>>\n> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(\n  handlerTag: number,\n  handler: InstanceType<ValueOf<typeof HammerGestures>>\n) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,QAGL,GAAG,EAHJ;AAKA,OAAO,SAASC,UAATA,CAAoBC,GAApB,EAAiC;EACtC,IAAIA,GAAG,IAAIF,QAAX,EAAqB;IACnB,OAAOA,QAAQ,CAACE,GAAD,CAAf;EACD;EAED,MAAM,IAAIC,KAAJ,uBAAAC,MAAA,CAAgCF,GAAI,CAApC,CAAN;AACD;AAED,OAAO,SAASG,oBAATA,CACLC,UADK,EAELC,OAFK,EAGL;EACA,IAAID,UAAU,IAAIN,QAAlB,EAA4B;IAC1B,MAAM,IAAIG,KAAJ,qBAAAC,MAAA,CAA8BE,UAAW,oBAAzC,CAAN;EACD;EACDN,QAAQ,CAACM,UAAD,CAAR,GAAuBC,OAAvB;EAEAP,QAAQ,CAACM,UAAD,CAAR,CAAqBA,UAArB,GAAkCA,UAAlC;AACD;AAED,OAAO,SAASE,kBAATA,CAA4BF,UAA5B,EAAgD;EAGrD,IAAI,EAAEA,UAAU,IAAIN,QAAhB,CAAJ,EAA+B;IAC7B;EACD;EACDC,UAAU,CAACK,UAAD,CAAV,CAAuBG,OAAvB;EAEA,OAAOT,QAAQ,CAACM,UAAD,CAAf;AACD;AAED,OAAO,SAASI,QAATA,CAAA,EAAoB;EACzB,OAAAC,aAAA,KAAYX,QAAA;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}